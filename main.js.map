{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/all-routes.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/got-view/book-view/book-details/book-details.component.ts","./src/app/got-view/book-view/book-details/book-details.component.html","./src/app/got-view/book-view/book-filter/book-filter.component.ts","./src/app/got-view/book-view/book-filter/book-filter.component.html","./src/app/got-view/book-view/book-search/book-search.component.ts","./src/app/got-view/book-view/book-search/book-search.component.html","./src/app/got-view/book-view/book-view.component.ts","./src/app/got-view/book-view/book-view.component.html","./src/app/got-view/book-view/book-view.module.ts","./src/app/got-view/character-view/character-view.component.ts","./src/app/got-view/character-view/character-view.component.html","./src/app/got-view/character-view/character-view.module.ts","./src/app/got-view/got-view.component.ts","./src/app/got-view/got-view.component.html","./src/app/got-view/got-view.module.ts","./src/app/got-view/header/header.component.ts","./src/app/got-view/header/header.component.html","./src/app/got-view/house-view/house-view.component.ts","./src/app/got-view/house-view/house-view.component.html","./src/app/got-view/house-view/house-view.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/models/book.ts","./src/app/models/character.ts","./src/app/services/auth-service/auth-service.module.ts","./src/app/services/auth-service/auth.service.ts","./src/app/services/book-store/book-store.module.ts","./src/app/services/book-store/book-store.service.ts","./src/app/services/character-store/character-store.module.ts","./src/app/services/character-store/character-store.service.ts","./src/app/services/helpers/query-helper.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export enum allRoutes {\n  login = 'login',\n  gotView = 'got-view'\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {GotViewComponent} from './got-view/got-view.component';\nimport {GotViewModule} from './got-view/got-view.module';\nimport {LoginComponent} from './login/login.component';\nimport {LoginModule} from './login/login.module';\n\nconst routes: Routes = [\n  {\n    path: 'got-view',\n    component: GotViewComponent,\n  },\n  {\n    path: '**',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [GotViewModule, LoginModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n}\n","<div class=\"content\" role=\"main\">\n\n  <router-outlet></router-outlet>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {Book} from '../../../models/book';\nimport {CharacterStoreService} from '../../../services/character-store/character-store.service';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.scss'],\n})\nexport class BookDetailsComponent implements OnInit, OnChanges {\n\n  @Input()\n  book: Book;\n\n  displayedCharacters;\n  displayedPovCharacters;\n\n  constructor(\n    private characterStore: CharacterStoreService,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if (changes && changes.book) {\n\n      // Only display some characters, because there can be more than 400 characters in one book so we would need to add pagination or search\n      this.characterStore.retrieveCharactersNameFromUrls(this.book.characters.slice(0, 10))\n        .subscribe({\n          next: value => {\n            this.displayedCharacters = value;\n          },\n        });\n\n      this.characterStore.retrieveCharactersNameFromUrls(this.book.povCharacters)\n        .subscribe({\n          next: value => {\n            this.displayedPovCharacters = value;\n          },\n        });\n\n    }\n\n  }\n\n}\n","<mat-card>\n\n  <mat-card-header>\n    <mat-card-title>Details of {{ book?.name }}</mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content>\n\n    <table>\n      <tr>\n        <td> ISBN-13</td>\n        <td>{{ book?.isbn }}</td>\n      </tr>\n      <tr>\n        <td> Authors</td>\n        <td>{{ book?.authors?.join(', ') }}</td>\n      </tr>\n      <tr>\n        <td> Pages</td>\n        <td>{{ book?.numberOfPages }}</td>\n      </tr>\n      <tr>\n        <td> Publisher</td>\n        <td>{{ book?.publisher }}</td>\n      </tr>\n      <tr>\n        <td> Country</td>\n        <td>{{ book?.country }}</td>\n      </tr>\n      <tr>\n        <td> Media Type</td>\n        <td>{{ book?.mediaType }}</td>\n      </tr>\n      <tr>\n        <td> Release date</td>\n        <td>{{ book?.released?.toLocaleDateString() }}</td>\n      </tr>\n      <tr>\n        <td> Characters</td>\n        <td>{{ displayedCharacters?.join(', ') }}</td>\n      </tr>\n      <tr>\n        <td> POV characters</td>\n        <td>{{ displayedPovCharacters?.join(', ') }}</td>\n      </tr>\n    </table>\n\n  </mat-card-content>\n\n</mat-card>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BookFilter} from './book-filter';\n\n@Component({\n  selector: 'app-book-filter',\n  templateUrl: './book-filter.component.html',\n  styleUrls: ['./book-filter.component.scss'],\n})\nexport class BookFilterComponent implements OnInit {\n\n  @Output() updateSearch = new EventEmitter<BookFilter>();\n\n  searchedName: string;\n  searchedDateStart: Date;\n  searchedDateEnd: Date;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  resetFilters($event) {\n    // This prevents the form to trigger automatically, we prefer to handle output manually\n    $event.preventDefault();\n    this.searchedName = undefined;\n    this.searchedDateStart = undefined;\n    this.searchedDateEnd = undefined;\n    this.updateSearch.emit({});\n  }\n\n  search() {\n    this.updateSearch.emit({\n      name: this.searchedName,\n      from: this.searchedDateStart,\n      to: this.searchedDateEnd,\n    });\n  }\n\n}\n","<mat-card class=\"my2\">\n\n  <mat-card-header>\n    UC2 - Filters that can be handled server side\n  </mat-card-header>\n\n  <mat-card-content>\n\n    <form (ngSubmit)=\"search()\">\n\n      <mat-form-field class=\"m2\">\n        <mat-label>Book full name</mat-label>\n        <input matInput\n               name=\"book-name\"\n               [(ngModel)]=\"searchedName\">\n      </mat-form-field>\n\n      <mat-form-field class=\"m2\" appearance=\"fill\">\n        <mat-label>Start date</mat-label>\n        <input matInput\n               [matDatepicker]=\"pickerStart\"\n               name=\"book-start-date\"\n               [(ngModel)]=\"searchedDateStart\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerStart\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerStart></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field class=\"m2\" appearance=\"fill\">\n        <mat-label>End date</mat-label>\n        <input matInput\n               [matDatepicker]=\"pickerEnd\"\n               name=\"book-end-date\"\n               [(ngModel)]=\"searchedDateEnd\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerEnd\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerEnd></mat-datepicker>\n      </mat-form-field>\n\n      <button mat-flat-button color=\"primary\" type=\"submit\">Search</button>\n\n      <span class=\"ml2\">\n        <button mat-flat-button color=\"warn\" class=\"ml2\" (click)=\"resetFilters($event)\">Reset</button>\n      </span>\n\n    </form>\n\n  </mat-card-content>\n\n</mat-card>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {debounceTime} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-book-search',\n  templateUrl: './book-search.component.html',\n  styleUrls: ['./book-search.component.scss'],\n})\nexport class BookSearchComponent implements OnInit, OnDestroy {\n\n  @Input() forcedFilter: string;\n  @Output() newSearchValue = new EventEmitter<string>();\n\n  searchValue: string = '';\n  searchSubject: Subject<string> = new Subject<string>();\n  searchDebounce$: Subscription;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    // Add debounce before firing @Output Event to smoothen search\n    this.searchDebounce$ = this.searchSubject.asObservable()\n      .pipe(\n        debounceTime(500),\n      )\n      .subscribe({\n        next: searchValue => {\n          this.newSearchValue.emit(searchValue);\n        },\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.searchDebounce$?.unsubscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.forcedFilter) {\n      this.searchValue = '';\n    }\n  }\n\n  clearSearch($event: Event) {\n    // Prevent form submission\n    $event.preventDefault();\n    this.searchValue = '';\n    this.searchSubject.next(this.searchValue);\n  }\n\n  searchInputChanged() {\n    this.searchSubject.next(this.searchValue);\n  }\n\n}\n","<mat-card class=\"my2\">\n\n  <mat-card-header>\n    UC3 - Local magic search (as the API doesn't allow to search any field)\n  </mat-card-header>\n\n  <mat-card-content class=\"my2\">\n\n    <mat-form-field class=\"global-search-field m2\">\n      <mat-label>Search anything in the table displayed below</mat-label>\n\n      <input matInput\n             name=\"book-search\"\n             [(ngModel)]=\"searchValue\"\n             (keyup)=\"searchInputChanged()\"\n      >\n\n    </mat-form-field>\n\n    <button mat-flat-button color=\"warn\" class=\"ml2\" (click)=\"clearSearch($event)\">Clear</button>\n\n  </mat-card-content>\n\n</mat-card>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Subscription} from 'rxjs';\nimport {Book} from '../../models/book';\nimport {BookStoreService} from '../../services/book-store/book-store.service';\nimport {BookFilter} from './book-filter/book-filter';\n\n@Component({\n  selector: 'app-book-view',\n  templateUrl: './book-view.component.html',\n  styleUrls: ['./book-view.component.scss'],\n})\nexport class BookViewComponent implements OnInit, OnDestroy {\n\n  readonly firstPage = 1; // The api paging starts at 1\n  readonly lastPage = 2; // We could parse api 'link' header to retrieve this info\n  readonly displayedColumns: string[] = ['name', 'released', 'authors', 'publisher', 'isbn', 'numberOfPages'];\n\n  bookListSub: Subscription;\n  bookToDisplay: Book;\n  currentFilter: BookFilter = {};\n  currentPage = this.firstPage;\n  dataSource = new MatTableDataSource<Book>([]);\n  forcedFilter: string;\n\n  constructor(\n    private bookStore: BookStoreService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this._retrieveBookList();\n  }\n\n  ngOnDestroy(): void {\n    this.bookListSub?.unsubscribe();\n  }\n\n  displayPrevious() {\n    this.currentPage--;\n    this._retrieveBookList();\n  }\n\n  displayNext() {\n    this.currentPage++;\n    this._retrieveBookList();\n  }\n\n  displayDetails(row: Book) {\n    this.bookToDisplay = row;\n  }\n\n  updateList(bookFilter: BookFilter) {\n    this.currentPage = 1;\n    this.currentFilter = bookFilter;\n    this._retrieveBookList();\n  }\n\n  filterLocalList(searchedStr: string) {\n    this.dataSource.filter = searchedStr;\n  }\n\n  // Search the global field in any property of all books from the current page\n  // This has to be called whenever the datasource is reinstancied\n  _addFilterPredicate(): void {\n    this.dataSource.filterPredicate = (book: Book, filter: string) => {\n\n      if (!filter) {\n        return true;\n      }\n\n      // Make search case insensitive\n      const _filter = filter.toLowerCase();\n\n      return book.name.toLowerCase().includes(_filter)\n        || book.country.toLowerCase().includes(_filter)\n        || book.released.toLocaleDateString().includes(_filter)\n        || book.isbn.toLowerCase().includes(_filter)\n        || book.mediaType.toLowerCase().includes(_filter)\n        || book.numberOfPages.toString().includes(_filter)\n        || book.publisher.toLowerCase().includes(_filter)\n        || book.authors.some(author => author.toLowerCase().includes(_filter));\n    };\n  }\n\n  _retrieveBookList(): void {\n    // Since the global search is bound to the current displayed page, we need to reset whenever the page changes\n    this.dataSource.filter = '';\n    // Hack to trigger the search changes to make it reset. Else we could use a service to coordinate filtering and pagination.\n    this.forcedFilter = Date.now().toString();\n\n    this.bookListSub = this.bookStore.retrieveBookList({\n      ...this.currentFilter,\n      page: this.currentPage,\n    })\n      .subscribe(bookList => {\n        this.dataSource = new MatTableDataSource<Book>(bookList);\n        this._addFilterPredicate();\n      });\n  }\n}\n","<app-book-filter (updateSearch)=\"updateList($event)\"></app-book-filter>\n\n<app-book-search [forcedFilter]=\"forcedFilter\" (newSearchValue)=\"filterLocalList($event)\"></app-book-search>\n\n<!-- This could be a subcomponent also -->\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"released\">\n    <th mat-header-cell *matHeaderCellDef> Release date</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.released.toLocaleDateString()}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"authors\">\n    <th mat-header-cell *matHeaderCellDef> Authors</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.authors?.join(', ')}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"publisher\">\n    <th mat-header-cell *matHeaderCellDef> Publisher</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.publisher}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"isbn\">\n    <th mat-header-cell *matHeaderCellDef> ISBN-13</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.isbn}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"numberOfPages\">\n    <th mat-header-cell *matHeaderCellDef> Pages</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.numberOfPages}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\n  <tr class=\"cursor-pointer\" mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"displayDetails(row)\"></tr>\n\n</table>\n\n<div class=\"my2\">\n  <button mat-flat-button\n          color=\"primary\"\n          *ngIf=\"currentPage > firstPage\"\n          (click)=\"displayPrevious()\">Previous page\n  </button>\n  <button mat-flat-button\n          color=\"primary\"\n          *ngIf=\"currentPage < lastPage\"\n          (click)=\"displayNext()\">Next page\n  </button>\n</div>\n\n<div *ngIf=\"bookToDisplay\">\n  <app-book-details [book]=\"bookToDisplay\"></app-book-details>\n</div>\n\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTableModule} from '@angular/material/table';\nimport {BookStoreModule} from '../../services/book-store/book-store.module';\nimport {CharacterStoreModule} from '../../services/character-store/character-store.module';\nimport {BookDetailsComponent} from './book-details/book-details.component';\nimport {BookViewComponent} from './book-view.component';\nimport { BookFilterComponent } from './book-filter/book-filter.component';\nimport { BookSearchComponent } from './book-search/book-search.component';\n\n@NgModule({\n  declarations: [BookViewComponent, BookDetailsComponent, BookFilterComponent, BookSearchComponent],\n  imports: [\n    BookStoreModule,\n    CharacterStoreModule,\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatCardModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatTableModule,\n  ],\n  exports: [\n    BookViewComponent,\n  ],\n})\nexport class BookViewModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-character-view',\n  templateUrl: './character-view.component.html',\n  styleUrls: ['./character-view.component.scss']\n})\nexport class CharacterViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>character-view works!</p>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CharacterViewComponent} from './character-view.component';\n\n@NgModule({\n  declarations: [CharacterViewComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    CharacterViewComponent,\n  ],\n})\nexport class CharacterViewModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-got-view',\n  templateUrl: './got-view.component.html',\n  styleUrls: ['./got-view.component.scss']\n})\nexport class GotViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n\n\n<mat-tab-group class=\"my2 mx4\">\n\n\n  <mat-tab label=\"Books\">\n    <!-- This allows lazy loading -->\n    <ng-template matTabContent>\n      <app-book-view></app-book-view>\n    </ng-template>\n  </mat-tab>\n\n\n  <mat-tab label=\"Houses\">\n    <!-- This allows lazy loading -->\n    <ng-template matTabContent>\n      <app-house-view></app-house-view>\n    </ng-template>\n  </mat-tab>\n\n\n  <mat-tab label=\"Characters\">\n    <!-- This allows lazy loading -->\n    <ng-template matTabContent>\n      <app-character-view></app-character-view>\n    </ng-template>\n  </mat-tab>\n\n\n</mat-tab-group>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {RouterModule} from '@angular/router';\nimport {AuthServiceModule} from '../services/auth-service/auth-service.module';\nimport {BookViewModule} from './book-view/book-view.module';\nimport {CharacterViewModule} from './character-view/character-view.module';\nimport {GotViewComponent} from './got-view.component';\nimport {HeaderComponent} from './header/header.component';\nimport {HouseViewModule} from './house-view/house-view.module';\n\n@NgModule({\n  declarations: [GotViewComponent, HeaderComponent],\n  imports: [\n    AuthServiceModule,\n    BookViewModule,\n    CharacterViewModule,\n    CommonModule,\n    HouseViewModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    RouterModule,\n  ],\n})\nexport class GotViewModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {allRoutes} from '../../all-routes';\nimport {AuthService} from '../../services/auth-service/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n\n  name: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (!this.authService.isLogged()) {\n      this.router.navigate([allRoutes.login]);\n      return;\n    }\n    this.name = this.authService.getName();\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate([allRoutes.login]);\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <span class=\"mr2\">Welcome {{ name }}</span>\n  <button mat-flat-button (click)=\"logout()\">Logout</button>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-house-view',\n  templateUrl: './house-view.component.html',\n  styleUrls: ['./house-view.component.scss']\n})\nexport class HouseViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>house-view works!</p>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {HouseViewComponent} from './house-view.component';\n\n@NgModule({\n  declarations: [HouseViewComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    HouseViewComponent,\n  ],\n})\nexport class HouseViewModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {allRoutes} from '../all-routes';\nimport {AuthService} from '../services/auth-service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.authService.isLogged()) {\n      this.router.navigate([allRoutes.gotView]);\n    }\n  }\n\n  login({name}: { name: string }): void {\n    this.authService.login(name);\n    this.router.navigate([allRoutes.gotView]);\n  }\n}\n","<form class=\"login-form flex flex-column items-center justify-center\"\n      [formGroup]=\"loginForm\"\n      (ngSubmit)=\"login(loginForm.value)\">\n\n  <mat-form-field class=\"mb4\">\n\n    <mat-label for=\"name\">What's your name ?</mat-label>\n\n    <input id=\"name\" name=\"name\" type=\"text\" formControlName=\"name\" matInput [formControlName]=\"'name'\">\n\n    <mat-error *ngIf=\"loginForm.controls.name.hasError('required')\">\n      Don't be shy :-)\n    </mat-error>\n\n  </mat-form-field>\n\n  <button mat-flat-button color=\"primary\" [disabled]=\"!loginForm.valid\">Login</button>\n\n</form>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {AuthServiceModule} from '../services/auth-service/auth-service.module';\nimport {LoginComponent} from './login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    AuthServiceModule,\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class LoginModule {\n}\n","export class Book {\n  url: string;\n  name: string;\n  isbn: string;\n  authors: string[];\n  numberOfPages: number;\n  publisher: string;\n  country: string;\n  mediaType: string;\n  released: Date;\n  characters: string[];\n  povCharacters: string[];\n\n  constructor(args?: Partial<Book>) {\n    if (args == null) {\n      return;\n    }\n    this.url = args.url || '';\n    this.name = args.name || '';\n    this.isbn = args.isbn || '';\n    this.authors = args.authors || [];\n    this.numberOfPages = args.numberOfPages || 0;\n    this.publisher = args.publisher || '';\n    this.country = args.country || '';\n    this.mediaType = args.mediaType || '';\n    this.released = args.released && new Date(args.released) || null;\n    this.characters = args.characters || [];\n    this.povCharacters = args.povCharacters || [];\n  }\n}\n","export class Character {\n  url: string;\n  name: string;\n  gender: string;\n  culture: string;\n  born: string;\n  died: string;\n  titles: string[];\n  aliases: string[];\n  father: string;\n  mother: string;\n  spouse: string;\n  allegiances: string[];\n  books: string[];\n  povBooks: string[];\n  tvSeries: string[];\n  playedBy: string[];\n\n  constructor(args?: Partial<Character>) {\n    if (args == null) {\n      return;\n    }\n    this.url = args.url || '';\n    this.name = args.name || '';\n    this.gender = args.gender || '';\n    this.culture = args.culture || '';\n    this.born = args.born || '';\n    this.died = args.died || '';\n    this.titles = args.titles || [];\n    this.aliases = args.aliases || [];\n    this.father = args.father || '';\n    this.mother = args.mother || '';\n    this.spouse = args.spouse || '';\n    this.allegiances = args.allegiances || [];\n    this.books = args.books || [];\n    this.povBooks = args.povBooks || [];\n    this.tvSeries = args.tvSeries || [];\n    this.playedBy = args.playedBy || [];\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {AuthService} from './auth.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [AuthService],\n})\nexport class AuthServiceModule {\n}\n","import {Injectable} from '@angular/core';\n\ntype GotAuth = {\n  name: string\n}\n\n@Injectable()\nexport class AuthService {\n\n  loginStorageKey = 'owt-auth';\n\n  constructor() {\n  }\n\n  login(name: string): GotAuth {\n    localStorage.setItem(this.loginStorageKey, JSON.stringify({name}));\n    return {name};\n  }\n\n  logout(): void {\n    localStorage.removeItem(this.loginStorageKey);\n  }\n\n  isLogged(): boolean {\n    const auth = this._retrieveLogin();\n    return !!auth?.name;\n  }\n\n  getName(): string {\n    const auth = this._retrieveLogin();\n    return auth?.name;\n  }\n\n  _retrieveLogin(): GotAuth {\n    const auth = localStorage.getItem(this.loginStorageKey);\n    if (auth == null) {\n      return null;\n    }\n    return JSON.parse(auth);\n  }\n\n}\n","import {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {BookStoreService} from './book-store.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  providers: [BookStoreService],\n})\nexport class BookStoreModule {\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {environment} from '../../../environments/environment';\nimport {Book} from '../../models/book';\nimport {queryHelper} from '../helpers/query-helper';\n\n@Injectable()\nexport class BookStoreService {\n\n  apiBaseUrl = environment.apiBaseUrl;\n  apiRelativeUrl = '/books';\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n\n  retrieveBookList({name, from, to, page}: {\n    name?: string, from?: Date, to?: Date, page?: number\n  } = {page: 1}): Observable<Book[]> {\n\n    const params = {\n      name: name,\n      page: page,\n      fromReleaseDate: from && from.toISOString().substr(0, 10),\n      toReleaseDate: to && to.toISOString().substr(0, 10),\n    };\n\n    return this.httpClient.get(`${this.apiBaseUrl}${this.apiRelativeUrl}${queryHelper(params)}`)\n      .pipe(\n        map((bookList: any) => {\n          return bookList.map(book => new Book(book));\n        }),\n      );\n\n  }\n\n\n  retrieveBook({id}: { id: number }): Observable<Book> {\n\n    return this.httpClient.get(`${this.apiBaseUrl}${this.apiRelativeUrl}/${id}`)\n      .pipe(\n        map(book => new Book(book)),\n      );\n\n  }\n\n}\n","import {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {CharacterStoreService} from './character-store.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  providers: [CharacterStoreService],\n})\nexport class CharacterStoreModule {\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {environment} from '../../../environments/environment';\nimport {Character} from '../../models/character';\nimport {queryHelper} from '../helpers/query-helper';\n\ntype CharacterFilter = {\n  name?: string;\n  gender?: string;\n  culture?: string;\n  born?: string;\n  died?: string;\n  isAlive?: boolean;\n}\n\n@Injectable()\nexport class CharacterStoreService {\n\n  apiBaseUrl = environment.apiBaseUrl;\n  apiRelativeUrl = '/characters';\n\n  cachedCharacterList: { [url: string]: string } = {};\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n\n  retrieveCharacterList(characterFilter: CharacterFilter = {}): Observable<Character[]> {\n\n    return this.httpClient.get(`${this.apiBaseUrl}${this.apiRelativeUrl}${queryHelper(characterFilter)}`)\n      .pipe(\n        map((characterList: any) => {\n          return characterList.map(character => new Character(character));\n        }),\n      );\n\n  }\n\n\n  retrieveCharacter({id}: { id: number }): Observable<Character> {\n\n    return this.httpClient.get(`${this.apiBaseUrl}${this.apiRelativeUrl}/${id}`)\n      .pipe(\n        map(character => new Character(character)),\n      );\n\n  }\n\n  // Returns a simple list of characters names given their full urls from the API\n  retrieveCharactersNameFromUrls(characterUrlList: string[]) {\n\n    // Returns an observable which retrieves the name from the cache or from the API if needed\n    const charName$ = (url) => {\n\n      if (this.cachedCharacterList[url] != null) {\n        return of(this.cachedCharacterList[url]);\n      }\n\n      return this.httpClient.get(url)\n        .pipe(\n          map((character: any) => character.name),\n          tap(charName => {\n            this.cachedCharacterList[url] = charName;\n          }),\n        );\n\n    };\n\n    // Wait for all responses\n    return forkJoin(characterUrlList.map(url => charName$(url)))\n      .pipe(\n        map(nameList => {\n          // Remove empty names as some characters don't have any\n          return nameList.filter(name => name?.length > 0);\n        }),\n      );\n\n  }\n\n\n}\n","export const queryHelper = (params: any) => {\n  const queryStr = Object.keys(params)\n    .filter(key => params[key] !== undefined)\n    .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(params[key]))\n    .join('&');\n\n  return queryStr && `?${queryStr}` || '';\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiBaseUrl: 'https://www.anapioficeandfire.com/api',\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}